<?xml version="1.0"?>
<project name="OA-Netzwerk" default="warServer">
	<property name="src" value="src"/>
	<property name="build" value="build"/>
        <property name="build.server" value="build/server"/>
        <property name="build.harvester" value="build/harvester"/>
        <property name="build.inspector" value="build/inspector"/>
	<property name="build.aggregator" value="build/aggregator"/>
	<property name="lib" value="lib"/>
        <property name="archive" value="arch"/>
	<property name="path" value="/restserver"/>
	<property name="url" value="http://oanet.cms.hu-berlin.de/manager"/>
	<property name="username" value=""/>
	<property name="password" value=""/>
	
	<taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask"/>
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask"/>
	<taskdef name="start" classname="org.apache.catalina.ant.StartTask"/>
	<taskdef name="stop" classname="org.apache.catalina.ant.StopTask"/>
	<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask"/>

	<path id="classpath.harvester">
		<pathelement location="${lib}/commons-cli-1.1.jar"/>
		<pathelement location="${lib}/commons-codec-1.3.jar"/>
		<pathelement location="${lib}/commons-httpclient-3.1.jar"/>
		<pathelement location="${lib}/jdom.jar"/>
		<pathelement location="${lib}/log4j-1.2.15.jar"/>
	</path>

	<path id="classpath.aggregator">
		<pathelement location="${lib}/commons-cli-1.1.jar"/>
		<pathelement location="${lib}/commons-codec-1.3.jar"/>
		<pathelement location="${lib}/commons-httpclient-3.1.jar"/>
		<pathelement location="${lib}/commons-lang-2.3.jar"/>
		<pathelement location="${lib}/jdom.jar"/>
		<pathelement location="${lib}/log4j-1.2.15.jar"/>
	</path>

	<target name="init">
		<mkdir dir="${build}"/>
		<mkdir dir="${build.server}"/>
		<mkdir dir="${build.harvester}"/>
		<mkdir dir="${build.aggregator}"/>
		<mkdir dir="${build.inspector}"/>
	</target>
	
	<target name="initArch">
		<tstamp/>
		<mkdir dir="${archive}"/>
	</target>
	
	<target name="tarSourceAll" depends="initArch">
		<tar destfile="${archive}/oa-netzwerk-${DSTAMP}.tar">
			<tarfileset dir="${src}/de" prefix="de">
				<include name="**/*.java"/>
				<include name="**/*.xsd"/>
				<exclude name="**/*.svn"/>
				<exclude name="**/*.properties"/>
				<exclude name="**/*.class"/>
				<exclude name="**/*.html"/>
				<exclude name="**/*.txt"/>
			</tarfileset>
		</tar>
	</target>
	
	<target name="compileAll" depends="compileHarvester,compileAggregator,compileServer">
		<tstamp/>
		<javac srcdir="${src}" destdir="${build}">
			<classpath refid="classpath" />
		</javac>
	</target>
	
	<target name="compileServer" depends="init">
		<tstamp/>
		<javac destdir="${build.server}" debug="true" debuglevel="lines,vars,source">
			<classpath refid="classpath.server" />
			<src path="${src}/de/dini/oanetzwerk/codec"/>
			<src path="${src}/de/dini/oanetzwerk/server"/>
			<src path="${src}/de/dini/oanetzwerk/utils"/>
			<exclude name="**/InspectorServlet.java"/>
			<exclude name="**/Test*.java"/>
			<exclude name="**/oai/**/*"/>
		</javac>
	</target>
	
	<target name="compileInspector" depends="init">
		<tstamp/>
		<javac destdir="${build.inspector}" debug="true" debuglevel="lines,vars,source">
			<classpath refid="classpath.inspector"/>
			<src path="${src}/de/dini/oanetzwerk/codec"/>
			<src path="${src}/de/dini/oanetzwerk/utils"/>
			<src path="${src}/de/dini/oanetzwerk/servicemodule"/>
			<exclude name="**/servicemodule/harvester/*"/>
			<exclude name="**/servicemodule/aggregator/*"/>
			<exclude name="**/Test*.java"/>
			<exclude name="**/SQL2DB.java"/>
			<exclude name="**/oai/**/*"/>
		</javac>
	</target>

	<target name="compileHarvester" depends="init">
		<javac destdir="${build.harvester}" debug="true" debuglevel="lines,vars,source" srcdir="${src}">
			<classpath refid="classpath.harvester"/>
			<include name="**/harvester/*.java"/>
			<include name="**/codec/*.java"/>
			<include name="**/RestClient.java"/>
			<include name="**/exceptions/*.java"/>
			<include name="**/HelpMethods.java"/>
			<exclude name="**/server/"/>
			<exclude name="**/Test*"/>
		</javac>
	</target>
	
	<target name="jarHarvester" depends="compileHarvester">
		<property name="cp" value="lib/commons-cli-1.1.jar lib/log4j-1.2.15.jar  ."/>
		<jar jarfile="Harvester.jar">
			<fileset dir="${build.harvester}"/>
			<manifest>
				<attribute name="Main-Class" value="de.dini.oanetzwerk.servicemodule.harvester.RunHarvester"/>
				<attribute name="Class-Path" value="${cp}"/>
			</manifest>
		</jar>
	</target>

	<target name="distHarvester" depends="jarHarvester">
		<tar destfile="Harvester.tar">
			<tarfileset dir="." prefix="harvester" includes="lib/**">
				<include name="Harvester.jar"/>
			</tarfileset>
		</tar>
	</target>

	<target name="compileAggregator" depends="init">
		<javac destdir="${build.aggregator}" debug="true" debuglevel="lines,vars,source" srcdir="${src}">
			<classpath refid="classpath.aggregator"/>
	                <include name="**/aggregator/*.java"/>
			<include name="**/codec/*.java"/>
			<include name="**/RestClient.java"/>
			<include name="**/exceptions/*.java"/>
			<include name="**/imf/*.java"/>
			<exclude name="**/Test*"/>
		</javac>
	</target>
	
	<target name="jarAggregator" depends="compileAggregator">
		<property name="cp" value="lib/commons-cli-1.1.jar lib/log4j-1.2.15.jar ."/>
		<jar jarfile="Aggregator.jar">
			<fileset dir="${build.aggregator}"/>
			<manifest>
				<attribute name="Main-Class" value="de.dini.oanetzwerk.servicemodule.aggregator.RunAggregator"/>
				<attribute name="Class-Path" value="${cp}"/>
			</manifest>
		</jar>
	</target>

	<target name="distAggregator" depends="jarAggregator">
		<tar destfile="Aggregator.tar">
			<tarfileset dir="." prefix="aggregator" includes="lib/**">
				<include name="Aggregator.jar"/>
			</tarfileset>
		</tar>
	</target>

	<target name="warServer" depends="compileServer">
		<war destfile="${build}/restserver-testing.war" webxml="conf/web.xml">
		<!--war destfile="${build}/restserver.war"-->
			<lib dir="${lib}"/>
			<metainf dir="conf">
				<include name="context.xml"/>
			</metainf>
			<classes dir="${build.server}">
				<exclude name="**/technotest/**"/>
			</classes>
		</war>
	</target>
	
	<target name="warInspector" depends="compileInspector">
		<war destfile="${build}/restinspector.war" webxml="conf_inspector/web.xml">
			<lib dir="${buildlib}"/>
			<webinf dir="conf_inspector">
				<include name="restclientprop.xml"/>
				<include name="log4j.xml"/>				
			</webinf>
			<classes dir="${build.inspector}">
				<exclude name="**/technotest/**"/>
			</classes>
  		    <zipfileset dir="img_inspector/" prefix="img"/>
		</war>
	</target>
	
	<target name="deployServer" depends="warServer" description="Install restserver">
		<deploy url="${url}" username="${username}" password="${password}" path="${path}" war="file:${build}/restserver.war" update="true"/>
	</target>
	
	<target name="reloadServer" description="Reload restserver">
		<reload url="${url}" username="${username}" password="${password}" path="${path}"/>
	</target>
	
	<target name="undeployServer" description="Undeploy restserver">
		<undeploy url="${url}" username="${username}" password="${password}" path="${path}"/>
	</target>

	<target name="clean">
		<delete dir="${build.harvester}"/>
		<delete dir="${build.inspector}"/>
		<delete dir="${build.aggregator}"/>
		<delete dir="${build.server}"/>
	</target>

</project>
