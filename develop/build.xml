<?xml version="1.0"?>
<project name="OA-Netzwerk" default="warServer" basedir=".">
	<property name="src" value="."/>
	<property name="build" value="build"/>
	<property name="build.server" value="build/server"/>
	<property name="build.harvester" value="build/harvester"/>
	<property name="build.inspector" value="build/inspector"/>
	<property name="archive" value="arch"/>
	<property name="lib" value="serverlib"/>
	<property name="buildlib" value="lib"/>
	<property name="path" value="/restserver"/>
	<property name="url" value="http://oanet.cms.hu-berlin.de/manager"/>
	<property name="username" value=""/>
	<property name="password" value=""/>
	
	<taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask"/>
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask"/>
	<taskdef name="start" classname="org.apache.catalina.ant.StartTask"/>
	<taskdef name="stop" classname="org.apache.catalina.ant.StopTask"/>
	<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask"/>
	
	<path id="classpath">
		<fileset dir="${lib}" includes="**/*.jar"/>
		<fileset dir="${buildlib}" includes="**/*.jar"/>
	</path>
	
	<target name="init">
		<mkdir dir="${build}"/>
		<mkdir dir="${build.server}"/>
		<mkdir dir="${build.harvester}"/>
		<mkdir dir="${build.inspector}"/>
	</target>
	
	<target name="initArch">
		<tstamp/>
		<mkdir dir="${archive}"/>
	</target>
	
	<target name="tarSourceAll" depends="initArch">
		<tar destfile="${archive}/oa-netzwerk-${DSTAMP}.tar">
			<tarfileset dir="${src}/de" prefix="de">
				<include name="**/*.java"/>
				<include name="**/*.xsd"/>
				<exclude name="**/*.svn"/>
				<exclude name="**/*.properties"/>
				<exclude name="**/*.class"/>
				<exclude name="**/*.html"/>
				<exclude name="**/*.txt"/>
			</tarfileset>
		</tar>
	</target>
	
	<target name="tarbz2SourceAll" depends="initArch,tarSourceAll">
		<bzip2 src="${archive}/oa-netzwerk-${DSTAMP}.tar" destfile="${archive}/oa-netzwerk-${DSTAMP}.tar.bz2"/>
	</target>
	
	<target name="compileAll">
		<tstamp/>
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath"/>
	</target>
	
	<target name="tarSourceServer" depends="initArch">
		<tar destfile="${archive}/oa-netzwerk-server-${DSTAMP}.tar">
			<tarfileset dir="${src}/de/dini/oanetzwerk/codec" prefix="de/dini/oanetzwerk/codec">
				<include name="**/*.java"/>
				<include name="**/*.xsd"/>
				<exclude name="**/*.properties"/>
				<exclude name="**/*.class"/>
				<exclude name="**/*.html"/>
				<exclude name="**/*.txt"/>
			</tarfileset>
			<tarfileset dir="${src}/de/dini/oanetzwerk/server" prefix="de/dini/oanetzwerk/server">
				<include name="**/*.java"/>
				<include name="**/*.xsd"/>
				<exclude name="**/*.properties"/>
				<exclude name="**/*.class"/>
				<exclude name="**/*.html"/>
				<exclude name="**/*.txt"/>
			</tarfileset>
			<tarfileset dir="${src}/de/dini/oanetzwerk/utils" prefix="de/dini/oanetzwerk/utils">
				<include name="**/*.java"/>
				<include name="**/*.xsd"/>
				<exclude name="**/*.properties"/>
				<exclude name="**/*.class"/>
				<exclude name="**/*.html"/>
				<exclude name="**/*.txt"/>
			</tarfileset>
		</tar>
	</target>
	
	<target name="tarbz2SourceServer" depends="initArch,tarSourceServer">
		<bzip2 src="${archive}/oa-netzwerk-server-${DSTAMP}.tar" destfile="${archive}/oa-netzwerk-server-${DSTAMP}.tar.bz2"/>
	</target>
	
	<target name="compileServer" depends="init">
		<tstamp/>
		<javac destdir="${build.server}" classpathref="classpath">
			<src path="${src}/de/dini/oanetzwerk/codec"/>
			<src path="${src}/de/dini/oanetzwerk/server"/>
			<src path="${src}/de/dini/oanetzwerk/utils"/>
			<exclude name="**/InspectorServlet.java"/>
			<exclude name="**/Test*.java"/>
			<exclude name="**/oai/**/*"/>
		</javac>
	</target>
	
	<target name="compileInspector" depends="init">
		<tstamp/>
		<javac destdir="${build.inspector}" classpathref="classpath">
			<src path="${src}/de/dini/oanetzwerk/codec"/>
			<src path="${src}/de/dini/oanetzwerk/utils"/>
			<src path="${src}/de/dini/oanetzwerk/servicemodule"/>
			<exclude name="**/servicemodule/harvester/*"/>
			<exclude name="**/servicemodule/aggregator/*"/>
			<exclude name="**/Test*.java"/>
			<exclude name="**/SQL2DB.java"/>
			<exclude name="**/oai/**/*"/>
		</javac>
	</target>	
	
	<target name="jarServer" depends="compileServer">
		<jar destfile="${build}/oa-netzwerk-server-${DSTAMP}.jar" basedir="${build.server}" excludes="**/technotest/**"/>
	</target>
	
	<target name="warServer" depends="compileServer">
		<war destfile="${build}/restserver.war" webxml="conf/web.xml">
		<!--war destfile="${build}/restserver.war"-->
			<lib dir="${lib}"/>
			<metainf dir="conf">
				<include name="context.xml"/>
			</metainf>
			<classes dir="${build.server}">
				<exclude name="**/technotest/**"/>
			</classes>
		</war>
	</target>
	
	<target name="warInspector" depends="compileInspector">
		<war destfile="${build}/restinspector.war" webxml="conf_inspector/web.xml">
			<lib dir="${buildlib}"/>
<!--			<metainf dir="conf">
				<include name="context.xml"/>
			</metainf>-->
			<classes dir="${build.inspector}">
				<exclude name="**/technotest/**"/>
			</classes>
  		    <zipfileset dir="img_inspector/" prefix="img"/>
		</war>
	</target>
	
	<target name="deployServer" depends="warServer" description="Install restserver">
		<deploy url="${url}" username="${username}" password="${password}" path="${path}" war="file:${build}/restserver.war" update="true"/>
	</target>
	
	<target name="reloadServer" description="Reload restserver">
		<reload url="${url}" username="${username}" password="${password}" path="${path}"/>
	</target>
	
	<target name="undeployServer" description="Undeploy restserver">
		<undeploy url="${url}" username="${username}" password="${password}" path="${path}"/>
	</target>

	<target name="compileHarvester" depends="init">
		<tstamp/>
		<javac destdir="${build.harvester}" classpathref="classpath">
			<src path="${src}/de/dini/oanetzwerk/codec"/>
			<exclude name="**/TestRestXmlCodec.java"/>
			<src path="${src}/de/dini/oanetzwerk/servicemodule"/>
			<exclude name="**/aggregator/**.*"/>
			<exclude name="**/OAIRecoveryMatcher.java"/>
			<exclude name="**/TestOAIRecoveryMatcher.java"/>
			<src path="${src}/de/dini/oanetzwerk/utils"/>
			<exclude name="**/imf/**"/>
			<exclude name="**/InspectorServlet.java"/>
		</javac>
	</target>
	
	<target name="jarHarvester" depends="compileHarvester">
		<jar destfile="${build}/oa-netzwerk-harvester${DSTAMP}.jar" basedir="${build.harvester}" excludes="**/technotest/**,**/imf/**">
			<fileset dir="${build}/../lib"/>
			<manifest>
				<attribute name="Main-Class" value="de.dini.oanetzwerk.servicemodule.harvester.Harvester"/>
			</manifest>
		</jar>
	</target>
</project>
